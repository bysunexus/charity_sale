<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd">

  <!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
  <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
    <property name="url" value="${jdbc.url}"/>
    <property name="username" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="10"/>
    <!-- 连接池最大使用连接数量 -->
    <property name="maxActive" value="80"/>
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="5"/>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="60000"/>
    <!--
    <property name="poolPreparedStatements" value="true" />
    <property name="maxPoolPreparedStatementPerConnectionSize" value="33" />
    -->
    <property name="validationQuery" value="SELECT 1 FROM DUAL"/>
    <property name="testOnBorrow" value="false"/>
    <property name="testOnReturn" value="false"/>
    <property name="testWhileIdle" value="true"/>
    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000"/>
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="25200000"/>
    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="true"/>
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="1800"/>
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true"/>
    <!-- 监控数据库 -->
    <property name="filters" value="mergeStat"/>
  </bean>
  <!--(事务管理)transaction manager, use JtaTransactionManager for global tx -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  <!--使用annotation定义事务-->
  <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>
  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="configLocation" value="classpath:myBatis-config.xml" />
    <property name="mapperLocations">
      <array>
        <value>classpath:com/charity/service/dao/*.xml</value>
      </array>
    </property>
    <property name="plugins">
      <array>
        <bean class="com.github.pagehelper.PageHelper">
          <property name="properties">
            <value>
              dialect=mysql
              offsetAsPageNum=true
              rowBoundsWithCount=true
              pageSizeZero=true
              reasonable=true
            </value>
          </property>
        </bean>
        <bean class="com.github.abel533.mapperhelper.MapperInterceptor">
          <property name="properties">
            <value>
              mappers=com.github.abel533.mapper.Mapper
              IDENTITY=MYSQL
              notEmpty=true
            </value>
          </property>
        </bean>
        <bean class="com.charity.core.repo.CameHumpInterceptor"/>
      </array>
    </property>
  </bean>

  <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
    <constructor-arg index="0" ref="sqlSessionFactory"/>
  </bean>

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" value="com.quyeying.core.dao,com.github.abel533.entity.mapper"/>
    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
  </bean>

  <!-- 配置druid监控spring jdbc -->
  <bean id="druidStatInterceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor"/>
  <aop:config>
    <aop:pointcut id="druidStatPointcut" expression="execution(* com.charity..service.*.*(..))"/>
    <aop:advisor advice-ref="druidStatInterceptor" pointcut-ref="druidStatPointcut"/>
  </aop:config>

</beans>
